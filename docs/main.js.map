{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/input-data/input-data.component.ts","./src/app/input-data/input-data.component.html","./src/app/models/item.ts","./src/app/models/loot-logs.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tibia-loot-parser';\n}\n","<div>\n  <app-input-data></app-input-data>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InputDataComponent } from './input-data/input-data.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserLogs } from '../models/user-logs';\nimport * as XLSX from 'xlsx';\nimport { BeforeAfter } from '../models/before-after';\nimport { LootLogs } from '../models/loot-logs';\nimport { Item } from '../models/item';\n\n@Component({\n  selector: 'app-input-data',\n  templateUrl: './input-data.component.html',\n  styleUrls: ['./input-data.component.scss']\n})\nexport class InputDataComponent implements OnInit {\n  fileName= 'ExcelSheet.xlsx';\n  lootLogsMap:Map<string,LootLogs>=new Map();\n  lootLogs:string=\"\";\n  submitted = false;\n  beforeAfter:Array<BeforeAfter> = [];\n  exurasio:boolean=false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() { this.submitted = true; }\n\n  parseLogs() {\n    this.lootLogsMap.clear();\n    let creature:string=\"\";\n    let itens:string=\"\";\n    let rep:Array<string>=this.lootLogs.split(/\\r?\\n/);\n    rep.forEach(currentLoot => {\n      if(currentLoot.match(/^[0-9]{2}:[0-9]{2} Loot of ([A-Za-z ]+):(([0-9 ]+[A-Za-z ]+,?)+)/gm)){\n        creature=currentLoot.replace(/^[0-9]{2}:[0-9]{2} Loot of (a )?([A-Za-z ]+):(([0-9 ]+[A-Za-z ]+,?)+)/gm,\"$2\");\n        itens=currentLoot.replace(/^[0-9]{2}:[0-9]{2} Loot of ([A-Za-z ]+):(([0-9 ]+[A-Za-z ]+,?)+)/gm,\"$2\");\n        let lootBag:LootLogs=this.lootLogsMap.get(creature)||new LootLogs();\n\n        let itensList=itens.split(/,/);\n        itensList.forEach(item => {\n          let itemType:Item = new Item();\n          let itemName:string=\"\";\n          lootBag.creature=creature;\n          if(item.match(/[0-9]+.*/)){\n            itemName = item.replace(/([0-9 ]+)([A-Za-z ]+)/,\"$2\");\n            if(lootBag.itens.has(itemName)){\n              let itTemp=lootBag.itens.get(itemName)||new Item();\n              itTemp.qtd+=Number(item.replace(/([0-9 ]+)([A-Za-z ]+)/,\"$1\")) || 0;\n            } else {\n              itemType.item = itemName;\n              itemType.qtd = Number(item.replace(/([0-9 ]+)([A-Za-z ]+)/,\"$1\"));\n              lootBag.itens.set(itemName,itemType);\n            }\n          } else {\n            itemName = item.match(/^ a .*/)? item.replace(/^( a )([A-Za-z ]+)/,\"$2\") :item.replace(/([0-9 ]+[A-Za-z ]+)/,\"$1\");\n            if(lootBag.itens.has(itemName)){\n              let itTemp=lootBag.itens.get(itemName)||new Item();\n              itTemp.qtd+=1;\n            } else {\n              itemType.item = itemName;\n              itemType.qtd = 1;\n              lootBag.itens.set(itemName,itemType);\n            }\n\n          }\n          if(!this.lootLogsMap.has(creature))\n            this.lootLogsMap.set(creature,lootBag);\n        });\n        lootBag.qtd+=1;\n      }\n    });\n\n  }\n\n  generateTable() {\n    this.parseLogs();\n  }\n\n\n\n  exportExcel() {\n    //this.fileName=this.userLogs.userName+\"_\"+this.userLogs.spellName+\"_\"+\"_lvl_\"+this.userLogs.level+\".xlsx\";\n    /* table id is passed over here */\n    let element = document.getElementById('excel-table');\n    const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\n\n    /* generate workbook and add the worksheet */\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    /* save to file */\n    XLSX.writeFile(wb, this.fileName);\n  }\n\n\n}\n","\n<div id=\"wrapper\">\n  <div id=\"left\">\n    <div>\n      <div>\n      <div class=\"form-group\">\n        <label for=\"logs\">Cole os logs de loot na caixa abaixo:</label>\n        <br>\n        <textarea class=\"logs-output\" id=\"logs\" name=\"logs\" [(ngModel)]=\"lootLogs\">\n        </textarea>\n      </div>\n    </div>\n    </div>\n  </div>\n</div>\n<button class=\"btn btn-primary\" (click)=\"generateTable()\">Gerar</button>\n  <button class=\"btn btn-primary\" (click)=\"exportExcel()\">Gerar Excel</button>\n  <div *ngFor=\"let line of lootLogsMap.values()\">\n    <br>\n    <h2>{{line.qtd}} {{line.creature}}(s) mortos</h2>\n    <table id=\"excel-table\">\n      <tr>\n        <td>Loot</td>\n        <td>Quantidade</td>\n        <td>Valor</td>\n      </tr>\n      <tr *ngFor=\"let loot of line.itens.values()\">\n        <td>{{loot.item}}</td>\n        <td>{{loot.qtd}}</td>\n        <td>{{loot.goldValue}}</td>\n      </tr>\n    </table>\n  </div>\n\n\n\n","export class Item {\n  item:string=\"\";\n  qtd:number=0;\n  goldValue:number=0;\n}\n","import { Item } from \"./item\";\n\nexport class LootLogs {\n  creature:string=\"\";\n  qtd:number=0;\n  itens:Map<string,Item>=new Map();\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}